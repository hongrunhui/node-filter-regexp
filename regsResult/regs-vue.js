camelizeRE = /-(\w)/g;
hyphenateRE = /\B([A-Z])/g;
bailRE = /[^\w.$]/;
classifyRE = /(?:^|[-_])(\w)/g;
/[-_]/g;
simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;
hookRE = /^hook:/;
validDivisionCharRE = /[\w).+\-_$\]]/;
listDelimiter = /;(?![^(]*\))/g;
propertyDelimiter = /:(.+)/;
cssVarRE = /^--/;
importantRE = /\s*!important$/;
transformRE = /\b(transform|all)(,|$)/;
defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
startTagClose = /^\s*(\/?)>/;
comment = /^<!--/;
conditionalComment = /^<!\[/;
/x(.)?/g;
encodedAttr = /&(?:lt|gt|quot|amp);/g;
encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;
/<!--([\s\S]*?)-->/g;
/<!\[CDATA\[([\s\S]*?)]]>/g;
onRE = /^@|^v-on:/;
dirRE = /^v-|^@|^:/;
forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
stripParensRE = /^\(|\)$/g;
argRE = /:(.*)$/;
bindRE = /^:|^v-bind:/;
modifierRE = /\.[^.]+/g;
ieNSBug = /^xmlns:NS\d+/;
ieNSPrefix = /^NS\d+:/;
fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;
/,$/;
/\u2028/g;
/\u2029/g;
stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
